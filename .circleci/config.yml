version: 2 # use CircleCI 2.0
jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point

    working_directory: ~/afra # directory where steps will run

    docker: # run the steps with Docker
      - image: circleci/openjdk:10-jdk # ...with this image as the primary container; this is where all `steps` will run

    steps: # a collection of executable commands

      - checkout # check out source code to working directory

      - restore_cache: # restore the saved cache after the first run or if `pom.xml` has changed
          key: afra

      - run: wget https://raw.githubusercontent.com/rebeca-lang/org.rebecalang.rmc/master/target/rmc-2.7.5.jar
      - run: mvn -N install:install-file -Dfile=rmc-2.7.5.jar -DgroupId=org.rebecalang -DartifactId=rmc -Dversion=2.7.5 -Dpackaging=jar
      - run: wget https://raw.githubusercontent.com/rebeca-lang/org.rebecalang.modeltransformer/master/target/modeltransformer-1.3.0.jar
      - run: mvn -N install:install-file -Dfile=modeltransformer-1.3.0.jar -DgroupId=org.rebecalang -DartifactId=modeltransformer -Dversion=1.3.0 -Dpackaging=jar
      - run: wget https://raw.githubusercontent.com/rebeca-lang/org.rebecalang.statespacetransformer/master/target/statespacetransformer-1.0.0.jar
      - run: mvn -N install:install-file -Dfile=statespacetransformer-1.0.0.jar -DgroupId=org.rebecalang -DartifactId=statespacetransformer -Dversion=1.0.0 -Dpackaging=jar

      #- run: mvn install # run the actual tests

      - save_cache: # saves the project dependencies
          paths:
            - ~/.m2
          key: afra
      - run: git config user.name $CIRCLE_PROJECT_USERNAME
      - run: gren --override --data-source=commits
      - run: github-release upload --user $CIRCLE_PROJECT_USERNAME --repo $CIRCLE_PROJECT_REPONAME --tag $CIRCLE_TAG --name "~/org.rebecalang.afra.repository/target/products/org.rebecalang.afra.ideplugins-macosx.cocoa.x86_64.tar.gz" --file org.rebecalang.afra.ideplugins-macosx.cocoa.x86_64.tar.gz
